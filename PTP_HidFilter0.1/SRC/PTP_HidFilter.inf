;
; PTP_HidFilter.inf
;

[Version]
Signature="$WINDOWS NT$"
Class = HIDClass
ClassGuid = {745a17a0-74d3-11d0-b6fe-00a0c90f57da}
Provider=%ManufacturerName%
CatalogFile=PTP_HidFilter.cat
DriverVer=07/17/2023,1.0.0.1
PnpLockdown=1

[DestinationDirs]
DefaultDestDir = 13

[ControlFlags]
; We don't want our device to be installable via the non-PnP hardware dialogs
ExcludeFromSelect = *

[SourceDisksNames]
1 = %DiskName%,,,""

[SourceDisksFiles]
PTP_HidFilter.sys  = 1,,

;*****************************************
; Install Section
;*****************************************

[Manufacturer]
%ManufacturerName%=Standard,NT$ARCH$.10.0

[Standard.NT$ARCH$.10.0]
; Driver migration: if this user installed the old Precision Touch Driver, install the generic HID USB driver for them
%PTP_HidFilter_RootDevice.DeviceDesc%=StandardUsbHid_Device, USB\VID_17EF&PID_60F6&MI_01

; The fact is, you can't filter HIDUSB or friends directly, because they load the export driver called
; HIDCLASS which overrides their IO Major Function pointers. Therefore we still implement our own HID miniport 
; transport, but in fact reusing the underlying HID transport (either Bluetooth or USB).
; Some high-level patches involved to modify the underlying driver IO handlers.


%PTP_HidFilter.DeviceDesc%=PTP_HidFilter_MiniPortDevice, BTHLEDevice\{00001812-0000-1000-8000-00805f9b34fb}_Dev_VID&0217ef_PID&60f6_REV&0008


%PTP_HidFilter.DeviceDesc%=PTP_HidFilter_MiniPortDevice, HID\VID_17EF&UP:000D_U:0005
%PTP_HidFilter.DeviceDesc%=PTP_HidFilter_MiniPortDevice, HID\VID_048D&UP:000D_U:0005
%PTP_HidFilter.DeviceDesc%=PTP_HidFilter_MiniPortDevice, HID\VID_06CB&UP:000D_U:0005



; To avoid confusions to OS, disable any other collections.
%PTP_HidFilter.NullDeviceDesc%=PTP_HidFilter_NullDevice, HID\VID_17EF&PID_60F6&MI_01&Col02
%PTP_HidFilter.NullDeviceDesc%=PTP_HidFilter_NullDevice, HID\VID_17EF&PID_60F6&MI_01&Col03
%PTP_HidFilter.NullDeviceDesc%=PTP_HidFilter_NullDevice, HID\{00001812-0000-1000-8000-00805f9b34fb}_Dev_VID&0217ef_PID&60f6&Col02;;

[FilterDriver_Payload]
PTP_HidFilter.sys

[StandardUsbHid_Device.NT]
Include = input.inf
Needs = HID_Inst.NT

[StandardUsbHid_Device.NT.HW]
Include = input.inf
Needs = HID_Inst.NT.HW

[StandardUsbHid_Device.NT.Services]
Include = input.inf
Needs = HID_Inst.NT.Services

[PTP_HidFilter_MiniPortDevice.NT]
CopyFiles=FilterDriver_Payload

[PTP_HidFilter_NullDevice]
; Nothing!

[PTP_HidFilter_NullDevice.Services]
AddService = ,2    ; no value for the service name

;-------------- Service installation
[PTP_HidFilter_MiniPortDevice.NT.Services]
AddService = PTP_HidFilter,, PTP_HidFilter_Service_Inst
AddService = mshidkmdf, %SPSVCINST_ASSOCSERVICE%, mshidkmdf_Service_Inst

[PTP_HidFilter_MiniPortDevice.NT.HW]
AddReg=PTP_HidFilter_AddReg

[PTP_HidFilter_AddReg]
HKR,,FriendlyName,,%PTP_HidFilter.DeviceDesc%
HKR,,"LowerFilters",0x00010008,"PTP_HidFilter"

[PTP_HidFilter_MiniPortDevice.NT.Wdf]
KmdfService = PTP_HidFilter, PTP_HidFilter_wdfsect

; -------------- Microsoft HID KMDF driver install sections
[mshidkmdf_Service_Inst]
ServiceType    = 1                  ; SERVICE_KERNEL_DRIVER
StartType      = 3                  ; SERVICE_DEMAND_START
ErrorControl   = 1                  ; SERVICE_ERROR_NORMAL
ServiceBinary  = %10%\System32\Drivers\mshidkmdf.sys

; -------------- PTP_HidFilter driver install sections
[PTP_HidFilter_Service_Inst]
DisplayName    = %PTP_HidFilter.SVCDESC%
ServiceType    = 1               ; SERVICE_KERNEL_DRIVER
StartType      = 3               ; SERVICE_DEMAND_START
ErrorControl   = 1               ; SERVICE_ERROR_NORMAL
ServiceBinary  = %13%\PTP_HidFilter.sys

[PTP_HidFilter_wdfsect]
KmdfLibraryVersion = $KMDFVERSION$

[Strings]
SPSVCINST_ASSOCSERVICE= 0x00000002
ManufacturerName = "jxleyo.HRP"
DiskName = "Precsion TouchPad HID Filter Installation Disk"
PTP_HidFilter_RootDevice.DeviceDesc = "Precsion TouchPad HID Filter Device"
PTP_HidFilter.DeviceDesc = "Precsion TouchPad HID Filter"
PTP_HidFilter.NullDeviceDesc = "Precsion TouchPad HID Filter Services"
PTP_HidFilter.SVCDESC = "Precsion TouchPad HID Filter Service"
